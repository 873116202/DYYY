# File: .github/workflows/build.yml
name: Ultimate Build

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'

jobs:
  sync-and-build:
    runs-on: macos-latest
    timeout-minutes: 15

    steps:
      # 同步上游仓库
      - name: Checkout & Sync
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
        env:
          UPSTREAM_REPO: 873116202/DYYY
        run: |
          git remote add upstream https://github.com/$UPSTREAM_REPO
          git fetch upstream
          git merge --no-edit upstream/main
          git push origin main

      # 修复依赖安装问题
      - name: Setup Environment
        run: |
          # 强制更新brew
          brew update-reset
          
          # 安装核心依赖
          brew install --force-bottle make ldid
          export HOMEBREW_NO_INSTALL_CLEANUP=1
          
          # 修复perl模块安装
          echo -e "install --force\nnotest" > $HOME/.cpan/CPAN/MyConfig.pm
          yes | sudo cpan -T File::Which

      # 配置Theos环境
      - name: Prepare Theos
        run: |
          THEOS_DIR="${HOME}/theos_cache"
          [ -d "$THEOS_DIR" ] || git clone --depth 1 https://github.com/roothide/theos.git $THEOS_DIR
          ln -sf $THEOS_DIR theos
          
          SDK_DIR="${THEOS_DIR}/sdks"
          [ -d "$SDK_DIR" ] || git clone --filter=blob:none https://github.com/theos/sdks.git $SDK_DIR

      # 智能构建系统
      - name: Build Packages
        env:
          THEOS: ${{ github.workspace }}/theos
        run: |
          export PATH="${THEOS}/bin:${PATH}"
          
          # 清理旧构建
          find . -name '*.deb' -delete
          make clean
          
          # 并行安全构建
          MAX_JOBS=$(( $(sysctl -n hw.ncpu) - 1 ))
          SCHEMES=("rootless" "roothide")
          
          for scheme in "${SCHEMES[@]}"; do
            xcrun make package \
              THEOS_PACKAGE_SCHEME=$scheme \
              FINALPACKAGE=1 \
              -j${MAX_JOBS} \
              DEBUG=0
          done

      # 增强型制品上传
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: DYYY-Binaries
          path: |
            *.deb
            !*debug*
          compression-level: 9
          retention-days: 3
